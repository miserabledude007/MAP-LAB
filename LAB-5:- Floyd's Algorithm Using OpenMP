FILE NAME:-  floyd_warshall.c

#include <stdio.h>
#include <omp.h>

#define INF 1000000000
#define V 4

int graph[V][V] = {
    {0, 3, INF, 5},
    {2, 0, INF, 4},
    {INF, 1, 0, INF},
    {INF, INF, 2, 0}
};

void floydWarshall(int dist[V][V]) {
    #pragma omp parallel for collapse(2)
    for (int k = 0; k < V; k++) {
        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (dist[i][k] < INF && dist[k][j] < INF) {
                    int newDist = dist[i][k] + dist[k][j];
                    if (newDist < dist[i][j]) {
                        dist[i][j] = newDist;
                    }
                }
            }
        }
    }
}

void printSolution(int dist[V][V]) {
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            if (dist[i][j] == INF)
                printf("INF ");
            else
                printf("%d ", dist[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int dist[V][V];
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            dist[i][j] = graph[i][j];
        }
    }
    floydWarshall(dist);
    printSolution(dist);
    return 0;
}

COMP:-  gcc -fopenmp -o floyd_warshall floyd_warshall.c
EXEC:-  ./floyd_warshall
O/P:-
0 3 7 5 
2 0 6 4 
3 1 0 5 
5 3 2 0 

GC:- %%writefile floyd_warshall.c, !gcc -fopenmp -o floyd_warshall floyd_warshall.c, !./floyd_warshall
