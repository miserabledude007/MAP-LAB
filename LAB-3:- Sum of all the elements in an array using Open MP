FILE NAME:-  parallel_sum_max.cpp

#include <omp.h>
#include <bits/stdc++.h>
using namespace std;

int main() {
    // Initialize the vector with some values
    vector<int> arr{3, 1, 2, 5, 4, 0};
    int sum = 0;
    int max = INT_MIN; // Initialize to the smallest possible integer value

    // Compute the sum and find the maximum value in parallel
    #pragma omp parallel
    {
        #pragma omp for
        for (int i = 0; i < arr.size(); i++) {
            sum += arr[i];
            if (arr[i] > max) {
                max = arr[i];
            }
        }
    }

    // Print the results
    cout << "Array sum: " << sum << endl;
    cout << "Largest number in the array: " << max << endl;

    return 0;
}

COMP:-  g++ -fopenmp -o parallel_sum_max parallel_sum_max.cpp
EXEC:-  ./parallel_sum_max
O/P:-
Array sum: 15
Largest number in the array: 5

GC:- %%writefile parallel_sum_max.cpp, !g++ -fopenmp -o parallel_sum_max parallel_sum_max.cpp, !./parallel_sum_max
