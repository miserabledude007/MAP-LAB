FILE NAME:-  mpi_rank_example.c

#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>
#include "tmpi_rank.h"
#include <time.h>

int main(int argc, char** argv) {
    MPI_Init(NULL, NULL);
    
    int world_rank;
    MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);
    int world_size;
    MPI_Comm_size(MPI_COMM_WORLD, &world_size);

    // Seed the random number generator to get different results each time
    srand(time(NULL) * world_rank);
    float rand_num = rand() / (float)RAND_MAX;
    int rank;
    
    TMPI_Rank(&rand_num, &rank, MPI_FLOAT, MPI_COMM_WORLD);
    printf("Rank for %f on process %d - %d\n", rand_num, world_rank, rank);
    
    MPI_Barrier(MPI_COMM_WORLD);
    MPI_Finalize();
    
    return 0;
}

COMP:-  mpicc -o mpi_rank_example mpi_rank_example.c tmpi_rank.c
EXEC:-  mpirun -np <number_of_processes> ./mpi_rank_example
:- mpirun -np 4 ./mpi_rank_example
O/P:-
Rank for 0.123456 on process 0 - 1
Rank for 0.654321 on process 1 - 2
Rank for 0.987654 on process 2 - 3
Rank for 0.543210 on process 3 - 0
