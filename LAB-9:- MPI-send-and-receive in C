FILE NAME:-  mpi_send_recv.c

#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>

int main(int argc, char **argv) {
    int number;
    int tag = 1;
    int size;
    int rank;
    MPI_Status status;

    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    if (size != 2) {
        fprintf(stderr, "This program requires exactly 2 processes.\n");
        MPI_Abort(MPI_COMM_WORLD, 1);
    }

    if (rank == 0) {
        number = -1; // Set the number to -1
        MPI_Send(&number, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);
    } else if (rank == 1) {
        MPI_Recv(&number, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);
        printf("Process %d received number %d from process 0\n", rank, number);
    }

    MPI_Finalize();
    return 0;
}

COMP:-  mpicc -o mpi_send_recv mpi_send_recv.c
EXEC:-  mpirun -np 2 ./mpi_send_recv
O/P:-
Process 1 received number -1 from process 0
