FILE NAME:-  mpi_send_recv.c

#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>

int main(int argc, char **argv) {
    int *array;
    int tag = 1;
    int size;
    int rank;
    MPI_Status status;

    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    if (rank == 0) {
        array = malloc(10 * sizeof(int));
        if (!array) {
            MPI_Abort(MPI_COMM_WORLD, 1);
        }
        MPI_Send(array, 10, MPI_INT, 1, tag, MPI_COMM_WORLD);
    }

    if (rank == 1) {
        array = malloc(10 * sizeof(int));
        if (!array) {
            MPI_Abort(MPI_COMM_WORLD, 1);
        }
        MPI_Recv(array, 10, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);
        // more code here to process the received data
        free(array);
    }

    if (rank == 0) {
        free(array);
    }

    MPI_Finalize();
    return 0;
}

COMP:-  mpicc -o mpi_send_recv mpi_send_recv.c
EXEC:-  mpirun -np 2 ./mpi_send_recv
